{"/home/usuario/pract10/src/ejercicio-2/WordFinder.ts":{"path":"/home/usuario/pract10/src/ejercicio-2/WordFinder.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":28}},"2":{"start":{"line":4,"column":24},"end":{"line":4,"column":48}},"3":{"start":{"line":5,"column":21},"end":{"line":5,"column":38}},"4":{"start":{"line":14,"column":8},"end":{"line":14,"column":16}},"5":{"start":{"line":22,"column":20},"end":{"line":22,"column":70}},"6":{"start":{"line":23,"column":21},"end":{"line":23,"column":68}},"7":{"start":{"line":24,"column":20},"end":{"line":24,"column":25}},"8":{"start":{"line":25,"column":8},"end":{"line":28,"column":11}},"9":{"start":{"line":26,"column":12},"end":{"line":26,"column":50}},"10":{"start":{"line":27,"column":12},"end":{"line":27,"column":39}},"11":{"start":{"line":29,"column":8},"end":{"line":29,"column":36}},"12":{"start":{"line":30,"column":8},"end":{"line":40,"column":11}},"13":{"start":{"line":31,"column":24},"end":{"line":31,"column":25}},"14":{"start":{"line":32,"column":20},"end":{"line":32,"column":21}},"15":{"start":{"line":33,"column":12},"end":{"line":36,"column":13}},"16":{"start":{"line":34,"column":16},"end":{"line":34,"column":24}},"17":{"start":{"line":35,"column":16},"end":{"line":35,"column":63}},"18":{"start":{"line":37,"column":12},"end":{"line":37,"column":54}},"19":{"start":{"line":38,"column":12},"end":{"line":38,"column":61}},"20":{"start":{"line":39,"column":12},"end":{"line":39,"column":25}},"21":{"start":{"line":41,"column":8},"end":{"line":46,"column":11}},"22":{"start":{"line":42,"column":12},"end":{"line":45,"column":13}},"23":{"start":{"line":43,"column":16},"end":{"line":43,"column":46}},"24":{"start":{"line":44,"column":16},"end":{"line":44,"column":52}},"25":{"start":{"line":54,"column":20},"end":{"line":54,"column":70}},"26":{"start":{"line":55,"column":8},"end":{"line":77,"column":11}},"27":{"start":{"line":56,"column":25},"end":{"line":58,"column":14}},"28":{"start":{"line":59,"column":24},"end":{"line":59,"column":29}},"29":{"start":{"line":60,"column":12},"end":{"line":70,"column":15}},"30":{"start":{"line":61,"column":28},"end":{"line":61,"column":29}},"31":{"start":{"line":62,"column":24},"end":{"line":62,"column":25}},"32":{"start":{"line":63,"column":16},"end":{"line":66,"column":17}},"33":{"start":{"line":64,"column":20},"end":{"line":64,"column":28}},"34":{"start":{"line":65,"column":20},"end":{"line":65,"column":67}},"35":{"start":{"line":67,"column":16},"end":{"line":67,"column":58}},"36":{"start":{"line":68,"column":16},"end":{"line":68,"column":67}},"37":{"start":{"line":69,"column":16},"end":{"line":69,"column":29}},"38":{"start":{"line":71,"column":12},"end":{"line":76,"column":15}},"39":{"start":{"line":72,"column":16},"end":{"line":75,"column":17}},"40":{"start":{"line":73,"column":20},"end":{"line":73,"column":50}},"41":{"start":{"line":74,"column":20},"end":{"line":74,"column":58}},"42":{"start":{"line":78,"column":8},"end":{"line":81,"column":11}},"43":{"start":{"line":79,"column":12},"end":{"line":79,"column":50}},"44":{"start":{"line":80,"column":12},"end":{"line":80,"column":36}},"45":{"start":{"line":84,"column":0},"end":{"line":84,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":18},"end":{"line":15,"column":5}},"line":13},"1":{"name":"(anonymous_1)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":30},"end":{"line":47,"column":5}},"line":21},"2":{"name":"(anonymous_2)","decl":{"start":{"line":25,"column":30},"end":{"line":25,"column":31}},"loc":{"start":{"line":25,"column":39},"end":{"line":28,"column":9}},"line":25},"3":{"name":"(anonymous_3)","decl":{"start":{"line":30,"column":31},"end":{"line":30,"column":32}},"loc":{"start":{"line":30,"column":42},"end":{"line":40,"column":9}},"line":30},"4":{"name":"(anonymous_4)","decl":{"start":{"line":41,"column":25},"end":{"line":41,"column":26}},"loc":{"start":{"line":41,"column":31},"end":{"line":46,"column":9}},"line":41},"5":{"name":"(anonymous_5)","decl":{"start":{"line":53,"column":4},"end":{"line":53,"column":5}},"loc":{"start":{"line":53,"column":25},"end":{"line":82,"column":5}},"line":53},"6":{"name":"(anonymous_6)","decl":{"start":{"line":55,"column":30},"end":{"line":55,"column":31}},"loc":{"start":{"line":55,"column":41},"end":{"line":77,"column":9}},"line":55},"7":{"name":"(anonymous_7)","decl":{"start":{"line":60,"column":35},"end":{"line":60,"column":36}},"loc":{"start":{"line":60,"column":46},"end":{"line":70,"column":13}},"line":60},"8":{"name":"(anonymous_8)","decl":{"start":{"line":71,"column":29},"end":{"line":71,"column":30}},"loc":{"start":{"line":71,"column":35},"end":{"line":76,"column":13}},"line":71},"9":{"name":"(anonymous_9)","decl":{"start":{"line":78,"column":30},"end":{"line":78,"column":31}},"loc":{"start":{"line":78,"column":39},"end":{"line":81,"column":9}},"line":78}},"branchMap":{"0":{"loc":{"start":{"line":42,"column":12},"end":{"line":45,"column":13}},"type":"if","locations":[{"start":{"line":42,"column":12},"end":{"line":45,"column":13}},{"start":{"line":42,"column":12},"end":{"line":45,"column":13}}],"line":42},"1":{"loc":{"start":{"line":72,"column":16},"end":{"line":75,"column":17}},"type":"if","locations":[{"start":{"line":72,"column":16},"end":{"line":75,"column":17}},{"start":{"line":72,"column":16},"end":{"line":75,"column":17}}],"line":72}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":3,"6":3,"7":3,"8":3,"9":1,"10":1,"11":3,"12":3,"13":1,"14":1,"15":1,"16":3,"17":3,"18":1,"19":1,"20":1,"21":3,"22":3,"23":2,"24":2,"25":3,"26":3,"27":2,"28":2,"29":2,"30":1,"31":1,"32":1,"33":3,"34":3,"35":1,"36":1,"37":1,"38":2,"39":2,"40":1,"41":1,"42":3,"43":1,"44":1,"45":1},"f":{"0":1,"1":3,"2":1,"3":1,"4":3,"5":3,"6":2,"7":1,"8":2,"9":1},"b":{"0":[2,1],"1":[1,1]},"inputSourceMap":{"version":3,"file":"/home/usuario/pract10/src/ejercicio-2/WordFinder.ts","sources":["/home/usuario/pract10/src/ejercicio-2/WordFinder.ts"],"names":[],"mappings":"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","sourcesContent":["import {spawn} from 'child_process';\nimport EventEmitter = require('events');\n\n/**\n * Class to find words in a text file.\n */\nexport class WordFinder extends EventEmitter {\n  /**\n   * Constructor\n   */\n  constructor() {\n    super();\n  }\n  /**\n   * Finds a word in a text file using pipes.\n   * @param fileName File name.\n   * @param word Word to find.\n   */\n  pipesFind(fileName: string, word: string): void {\n    const cat = spawn('cat', [`${fileName}`]);\n    const grep = spawn('grep', [`${word}`]);\n    let found: boolean = false;\n    cat.stderr.on('data', (err) => {\n      console.log(`Error finding the word`);\n      this.emit('catError', err);\n    });\n    cat.stdout.pipe(grep.stdin);\n    grep.stdout.on('data', (piece) => {\n      let count: number = 0;\n      let i: number = 0;\n      while (piece.toString().indexOf(`${word}`, i) !== -1) {\n        count ++;\n        i = piece.toString().indexOf(`${word}`, i) + 1;\n      }\n      console.log(`Word found ${count} time/s`);\n      this.emit('pipes', `Word found ${count} time/s`);\n      found = true;\n    });\n    grep.on('close', () => {\n      if (!found) {\n        console.log('Word not found');\n        this.emit('word', 'Word not found');\n      }\n    });\n  }\n  /**\n   * Finds a word in a text file.\n   * @param fileName File name.\n   * @param word Word to find.\n   */\n  find(fileName: string, word: string): void {\n    const cat = spawn('cat', [`${fileName}`]);\n    cat.stdout.on('data', (datos) => {\n      const grep = spawn(`grep '${word}' <<< '${datos}'`, {\n        shell: '/bin/bash',\n      });\n      let found: boolean = false;\n      grep.stdout.on('data', (piece) => {\n        let count: number = 0;\n        let i: number = 0;\n        while (piece.toString().indexOf(`${word}`, i) !== -1) {\n          count ++;\n          i = piece.toString().indexOf(`${word}`, i) + 1;\n        }\n        console.log(`Word found ${count} time/s`);\n        this.emit('noPipes', `Word found ${count} time/s`);\n        found = true;\n      });\n      grep.on('close', () => {\n        if (!found) {\n          console.log('Word not found');\n          this.emit('noWord', 'Word not found');\n        }\n      });\n    });\n    cat.stderr.on('data', (err) => {\n      console.log(`Error finding the word`);\n      this.emit('error', err);\n    });\n  }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a413fb98a73cc6ae4b99034664ac7660211e3ef8","contentHash":"f9d68fc53bce6b9c4b93384a5a5ff27eafe2c58fc2af7c9988bb8faf55d5162e"},"/home/usuario/pract10/src/ejercicio-3/DirectoryWatcher.ts":{"path":"/home/usuario/pract10/src/ejercicio-3/DirectoryWatcher.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":34}},"2":{"start":{"line":4,"column":21},"end":{"line":4,"column":38}},"3":{"start":{"line":5,"column":13},"end":{"line":5,"column":26}},"4":{"start":{"line":14,"column":8},"end":{"line":14,"column":16}},"5":{"start":{"line":22,"column":8},"end":{"line":22,"column":46}},"6":{"start":{"line":23,"column":24},"end":{"line":23,"column":50}},"7":{"start":{"line":24,"column":8},"end":{"line":27,"column":11}},"8":{"start":{"line":25,"column":12},"end":{"line":25,"column":65}},"9":{"start":{"line":26,"column":12},"end":{"line":26,"column":73}},"10":{"start":{"line":28,"column":8},"end":{"line":31,"column":11}},"11":{"start":{"line":29,"column":12},"end":{"line":29,"column":74}},"12":{"start":{"line":30,"column":12},"end":{"line":30,"column":82}},"13":{"start":{"line":32,"column":8},"end":{"line":35,"column":11}},"14":{"start":{"line":33,"column":12},"end":{"line":33,"column":56}},"15":{"start":{"line":34,"column":12},"end":{"line":34,"column":44}},"16":{"start":{"line":36,"column":8},"end":{"line":36,"column":23}},"17":{"start":{"line":39,"column":0},"end":{"line":39,"column":44}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":18},"end":{"line":15,"column":5}},"line":13},"1":{"name":"(anonymous_1)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":36},"end":{"line":37,"column":5}},"line":21},"2":{"name":"(anonymous_2)","decl":{"start":{"line":24,"column":29},"end":{"line":24,"column":30}},"loc":{"start":{"line":24,"column":43},"end":{"line":27,"column":9}},"line":24},"3":{"name":"(anonymous_3)","decl":{"start":{"line":28,"column":29},"end":{"line":28,"column":30}},"loc":{"start":{"line":28,"column":43},"end":{"line":31,"column":9}},"line":28},"4":{"name":"(anonymous_4)","decl":{"start":{"line":32,"column":28},"end":{"line":32,"column":29}},"loc":{"start":{"line":32,"column":37},"end":{"line":35,"column":9}},"line":32}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1},"f":{"0":1,"1":1,"2":1,"3":1,"4":1},"b":{},"inputSourceMap":{"version":3,"file":"/home/usuario/pract10/src/ejercicio-3/DirectoryWatcher.ts","sources":["/home/usuario/pract10/src/ejercicio-3/DirectoryWatcher.ts"],"names":[],"mappings":";;;AAAA,uCAAwC;AACxC,2BAAoC;AAEpC;;GAEG;AACH,MAAa,gBAAiB,SAAQ,YAAY;IAChD;;OAEG;IACH;QACE,KAAK,EAAE,CAAC;IACV,CAAC;IACD;;;;OAIG;IACH,cAAc,CAAC,IAAY,EAAE,SAAiB;QAC5C,OAAO,CAAC,GAAG,CAAC,YAAY,IAAI,QAAQ,CAAC,CAAC;QACtC,MAAM,OAAO,GAAG,IAAA,UAAK,EAAC,SAAS,CAAC,CAAC;QACjC,OAAO,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAE;YAChC,OAAO,CAAC,GAAG,CAAC,YAAY,QAAQ,mBAAmB,CAAC,CAAC;YACrD,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,YAAY,QAAQ,mBAAmB,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC;QACH,OAAO,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAE;YAChC,OAAO,CAAC,GAAG,CAAC,YAAY,QAAQ,4BAA4B,CAAC,CAAC;YAC9D,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,YAAY,QAAQ,4BAA4B,CAAC,CAAC;QACxE,CAAC,CAAC,CAAC;QACH,OAAO,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,GAAG,EAAE,EAAE;YAC1B,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;YAC5C,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;QACH,OAAO,OAAO,CAAC;IACjB,CAAC;CACF;AA7BD,4CA6BC","sourcesContent":["import EventEmitter = require('events');\nimport {FSWatcher, watch} from 'fs';\n\n/**\n * Class to watch a user's notes directory.\n */\nexport class DirectoryWatcher extends EventEmitter {\n  /**\n   * Constructor\n   */\n  constructor() {\n    super();\n  }\n  /**\n   * Watches a user's notes directory.\n   * @param user User\n   * @param directory Notes directory\n   */\n  watchDirectory(user: string, directory: string): FSWatcher {\n    console.log(`Watching ${user} notes`);\n    const watcher = watch(directory);\n    watcher.on('rename', (filename) => {\n      console.log(`The note ${filename} has been removed`);\n      this.emit('rename', `The note ${filename} has been removed`);\n    });\n    watcher.on('change', (filename) => {\n      console.log(`The note ${filename} has been created/modified`);\n      this.emit('change', `The note ${filename} has been created/modified`);\n    });\n    watcher.on('error', (err) => {\n      console.log('Error watching the directory');\n      this.emit('error', err.message);\n    });\n    return watcher;\n  }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9efc2d80bda296412e421df910afcaf6f473820f","contentHash":"f4bc595a5f24b362daa243a752af2c6a5296e74df668c8050cf15338f8949a8b"},"/home/usuario/pract10/src/ejercicio-4/Wrapper.ts":{"path":"/home/usuario/pract10/src/ejercicio-4/Wrapper.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"2":{"start":{"line":4,"column":24},"end":{"line":4,"column":48}},"3":{"start":{"line":5,"column":21},"end":{"line":5,"column":38}},"4":{"start":{"line":6,"column":13},"end":{"line":6,"column":26}},"5":{"start":{"line":15,"column":8},"end":{"line":15,"column":16}},"6":{"start":{"line":22,"column":8},"end":{"line":41,"column":9}},"7":{"start":{"line":23,"column":12},"end":{"line":23,"column":55}},"8":{"start":{"line":24,"column":12},"end":{"line":24,"column":65}},"9":{"start":{"line":27,"column":30},"end":{"line":29,"column":14}},"10":{"start":{"line":30,"column":25},"end":{"line":32,"column":14}},"11":{"start":{"line":33,"column":12},"end":{"line":36,"column":15}},"12":{"start":{"line":34,"column":16},"end":{"line":34,"column":46}},"13":{"start":{"line":35,"column":16},"end":{"line":35,"column":57}},"14":{"start":{"line":37,"column":12},"end":{"line":40,"column":15}},"15":{"start":{"line":38,"column":16},"end":{"line":38,"column":41}},"16":{"start":{"line":39,"column":16},"end":{"line":39,"column":47}},"17":{"start":{"line":48,"column":8},"end":{"line":57,"column":11}},"18":{"start":{"line":49,"column":12},"end":{"line":56,"column":13}},"19":{"start":{"line":50,"column":16},"end":{"line":50,"column":60}},"20":{"start":{"line":51,"column":16},"end":{"line":51,"column":53}},"21":{"start":{"line":54,"column":16},"end":{"line":54,"column":49}},"22":{"start":{"line":55,"column":16},"end":{"line":55,"column":56}},"23":{"start":{"line":64,"column":19},"end":{"line":64,"column":64}},"24":{"start":{"line":65,"column":8},"end":{"line":68,"column":11}},"25":{"start":{"line":66,"column":12},"end":{"line":66,"column":43}},"26":{"start":{"line":67,"column":12},"end":{"line":67,"column":44}},"27":{"start":{"line":69,"column":8},"end":{"line":72,"column":11}},"28":{"start":{"line":70,"column":12},"end":{"line":70,"column":47}},"29":{"start":{"line":71,"column":12},"end":{"line":71,"column":56}},"30":{"start":{"line":79,"column":20},"end":{"line":79,"column":66}},"31":{"start":{"line":80,"column":8},"end":{"line":83,"column":11}},"32":{"start":{"line":81,"column":12},"end":{"line":81,"column":44}},"33":{"start":{"line":82,"column":12},"end":{"line":82,"column":47}},"34":{"start":{"line":84,"column":8},"end":{"line":87,"column":11}},"35":{"start":{"line":85,"column":12},"end":{"line":85,"column":54}},"36":{"start":{"line":86,"column":12},"end":{"line":86,"column":65}},"37":{"start":{"line":94,"column":8},"end":{"line":103,"column":11}},"38":{"start":{"line":95,"column":12},"end":{"line":102,"column":13}},"39":{"start":{"line":96,"column":16},"end":{"line":96,"column":55}},"40":{"start":{"line":97,"column":16},"end":{"line":97,"column":50}},"41":{"start":{"line":100,"column":16},"end":{"line":100,"column":44}},"42":{"start":{"line":101,"column":16},"end":{"line":101,"column":48}},"43":{"start":{"line":111,"column":8},"end":{"line":120,"column":11}},"44":{"start":{"line":112,"column":12},"end":{"line":119,"column":13}},"45":{"start":{"line":113,"column":16},"end":{"line":113,"column":53}},"46":{"start":{"line":114,"column":16},"end":{"line":114,"column":52}},"47":{"start":{"line":117,"column":16},"end":{"line":117,"column":42}},"48":{"start":{"line":118,"column":16},"end":{"line":118,"column":48}},"49":{"start":{"line":123,"column":0},"end":{"line":123,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":5}},"loc":{"start":{"line":14,"column":18},"end":{"line":16,"column":5}},"line":14},"1":{"name":"(anonymous_1)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":26},"end":{"line":42,"column":5}},"line":21},"2":{"name":"(anonymous_2)","decl":{"start":{"line":33,"column":40},"end":{"line":33,"column":41}},"loc":{"start":{"line":33,"column":46},"end":{"line":36,"column":13}},"line":33},"3":{"name":"(anonymous_3)","decl":{"start":{"line":37,"column":35},"end":{"line":37,"column":36}},"loc":{"start":{"line":37,"column":41},"end":{"line":40,"column":13}},"line":37},"4":{"name":"(anonymous_4)","decl":{"start":{"line":47,"column":4},"end":{"line":47,"column":5}},"loc":{"start":{"line":47,"column":26},"end":{"line":58,"column":5}},"line":47},"5":{"name":"(anonymous_5)","decl":{"start":{"line":48,"column":35},"end":{"line":48,"column":36}},"loc":{"start":{"line":48,"column":44},"end":{"line":57,"column":9}},"line":48},"6":{"name":"(anonymous_6)","decl":{"start":{"line":63,"column":4},"end":{"line":63,"column":5}},"loc":{"start":{"line":63,"column":20},"end":{"line":73,"column":5}},"line":63},"7":{"name":"(anonymous_7)","decl":{"start":{"line":65,"column":29},"end":{"line":65,"column":30}},"loc":{"start":{"line":65,"column":35},"end":{"line":68,"column":9}},"line":65},"8":{"name":"(anonymous_8)","decl":{"start":{"line":69,"column":29},"end":{"line":69,"column":30}},"loc":{"start":{"line":69,"column":35},"end":{"line":72,"column":9}},"line":69},"9":{"name":"(anonymous_9)","decl":{"start":{"line":78,"column":4},"end":{"line":78,"column":5}},"loc":{"start":{"line":78,"column":22},"end":{"line":88,"column":5}},"line":78},"10":{"name":"(anonymous_10)","decl":{"start":{"line":80,"column":30},"end":{"line":80,"column":31}},"loc":{"start":{"line":80,"column":36},"end":{"line":83,"column":9}},"line":80},"11":{"name":"(anonymous_11)","decl":{"start":{"line":84,"column":30},"end":{"line":84,"column":31}},"loc":{"start":{"line":84,"column":36},"end":{"line":87,"column":9}},"line":84},"12":{"name":"(anonymous_12)","decl":{"start":{"line":93,"column":4},"end":{"line":93,"column":5}},"loc":{"start":{"line":93,"column":17},"end":{"line":104,"column":5}},"line":93},"13":{"name":"(anonymous_13)","decl":{"start":{"line":94,"column":53},"end":{"line":94,"column":54}},"loc":{"start":{"line":94,"column":62},"end":{"line":103,"column":9}},"line":94},"14":{"name":"(anonymous_14)","decl":{"start":{"line":110,"column":4},"end":{"line":110,"column":5}},"loc":{"start":{"line":110,"column":19},"end":{"line":121,"column":5}},"line":110},"15":{"name":"(anonymous_15)","decl":{"start":{"line":111,"column":35},"end":{"line":111,"column":36}},"loc":{"start":{"line":111,"column":44},"end":{"line":120,"column":9}},"line":111}},"branchMap":{"0":{"loc":{"start":{"line":22,"column":8},"end":{"line":41,"column":9}},"type":"if","locations":[{"start":{"line":22,"column":8},"end":{"line":41,"column":9}},{"start":{"line":22,"column":8},"end":{"line":41,"column":9}}],"line":22},"1":{"loc":{"start":{"line":49,"column":12},"end":{"line":56,"column":13}},"type":"if","locations":[{"start":{"line":49,"column":12},"end":{"line":56,"column":13}},{"start":{"line":49,"column":12},"end":{"line":56,"column":13}}],"line":49},"2":{"loc":{"start":{"line":95,"column":12},"end":{"line":102,"column":13}},"type":"if","locations":[{"start":{"line":95,"column":12},"end":{"line":102,"column":13}},{"start":{"line":95,"column":12},"end":{"line":102,"column":13}}],"line":95},"3":{"loc":{"start":{"line":112,"column":12},"end":{"line":119,"column":13}},"type":"if","locations":[{"start":{"line":112,"column":12},"end":{"line":119,"column":13}},{"start":{"line":112,"column":12},"end":{"line":119,"column":13}}],"line":112}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":3,"7":1,"8":1,"9":2,"10":2,"11":2,"12":1,"13":1,"14":2,"15":1,"16":1,"17":2,"18":2,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":0,"29":0,"30":1,"31":1,"32":1,"33":1,"34":1,"35":0,"36":0,"37":2,"38":2,"39":1,"40":1,"41":1,"42":1,"43":2,"44":2,"45":1,"46":1,"47":1,"48":1,"49":1},"f":{"0":1,"1":3,"2":1,"3":1,"4":2,"5":2,"6":1,"7":1,"8":0,"9":1,"10":1,"11":0,"12":2,"13":2,"14":2,"15":2},"b":{"0":[1,2],"1":[1,1],"2":[1,1],"3":[1,1]},"inputSourceMap":{"version":3,"file":"/home/usuario/pract10/src/ejercicio-4/Wrapper.ts","sources":["/home/usuario/pract10/src/ejercicio-4/Wrapper.ts"],"names":[],"mappings":"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","sourcesContent":["import {spawn} from 'child_process';\nimport EventEmitter = require('events');\nimport {existsSync, mkdir, rename, rm} from 'fs';\n\n/**\n * Class to wrap linux commands.\n */\nexport class Wrapper extends EventEmitter {\n  /**\n   * Constructor\n   */\n  constructor() {\n    super();\n  }\n\n  /**\n   * Checks if a file is a directory.\n   * @param path File path to check.\n   */\n  directoryOrFile(path: string): void {\n    if (!existsSync(path)) {\n      console.log('File or directory not found');\n      this.emit('notFound', 'File or directory not found');\n    } else {\n      const directory = spawn(`test -d ${path} && echo \"Found/Exists\"`, {\n        shell: true,\n      });\n      const file = spawn(`test -f ${path} && echo \"Found/Exists\"`, {\n        shell: true,\n      });\n      directory.stdout.on('data', () => {\n        console.log('Is a directory');\n        this.emit('directory', 'Is a directory');\n      });\n      file.stdout.on('data', () => {\n        console.log('Is a file');\n        this.emit('file', 'Is a file');\n      });\n    }\n  }\n\n  /**\n   * Creates a directory.\n   * @param path Directory path to create.\n   */\n  createDirectory(path: string) {\n    mkdir(`${path}`, (err) => {\n      if (err) {\n        console.log('Error creating the directory');\n        this.emit('mkdirError', err.message);\n      } else {\n        console.log('Directory created');\n        this.emit('mkdir', 'Directory created');\n      }\n    });\n  }\n\n  /**\n   * Lists the files in a directory.\n   * @param path Directory path to list files.\n   */\n  listFiles(path: string) {\n    const ls = spawn('ls', [`${path}`]);\n    ls.stdout.on('data', () => {\n      ls.stdout.pipe(process.stdout);\n      this.emit('ls', 'Files listed');\n    });\n    ls.stderr.on('data', () => {\n      console.log('Error listing files');\n      this.emit('lsError', 'Error listing files');\n    });\n  }\n\n  /**\n   * Shows the content of a file.\n   * @param path File path to show content.\n   */\n  showContent(path: string) {\n    const cat = spawn('cat', [`${path}`]);\n    cat.stdout.on('data', () => {\n      cat.stdout.pipe(process.stdout);\n      this.emit('cat', 'Content showed');\n    });\n    cat.stderr.on('data', () => {\n      console.log('Error show file\\'s content');\n      this.emit('showError', 'Error show file\\'s content');\n    });\n  }\n\n  /**\n  * Removes a file.\n  * @param path File path to remove.\n  */\n  remove(path: string) {\n    rm(`${path}`, {recursive: true}, (err) => {\n      if (err) {\n        console.log('Error removing the file');\n        this.emit('rmError', err.message);\n      } else {\n        console.log('File removed');\n        this.emit('rm', 'File removed');\n      }\n    });\n  }\n\n  /**\n   * Moves a file.\n   * @param src Old file path.\n   * @param dst New file path.\n   */\n  move(src: string, dst: string) {\n    rename(src, dst, (err) => {\n      if (err) {\n        console.log('Error moving the file');\n        this.emit('moveError', err.message);\n      } else {\n        console.log('File moved');\n        this.emit('move', 'File moved');\n      }\n    });\n  }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5e92c3ee44e278719243f5f84d763e80803e3370","contentHash":"53f9b7ee7d3f0df57171f8e7858470cfa45fd05ae99d45bcf921648f883f63de"}}